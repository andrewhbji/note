git checkout -t origin/android-goldfish-3.4 -b goldfish3.4

make -C /usr/src/linux-headers-3.13.0-32-generic M=`pwd` modules // -C指定的是linux内核树路径,不是代码树路径

dmesg //检测和控制内核环缓冲,可以收集内核输出

git revert HEAD 回滚到HEAD版本
git show HEAD 查看HEAD版本

http://blog.csdn.net/rig622/article/details/7608317


vi + ctags
	:ta + 函数名 查找并调转到指定函数
	:ts [+ 函数名] 查找并列出指定函数
	ctrl + ] 跳转代码
	ctrl + t 是ctrl + ] 反操作
	/ + 内容 查找当前文件的内容
	n 向下查找
	N 向上查找

find . -name "Android.mk" | xargs grep LOCAL_MODULE | grep init 列出所有LOCAL_MODULE的值为init的Android.mk文件的路径

grep "main(" core/init/* 列出指定路径下存在main(的文件

ctags 失效的状况:
	MACRO 以及 函数指针


aosp 覆盖package: 在目标MODULE的Android.mk中添加LOCAL_OVERRIDES_PACKAGES:= OVERRIDED_MODULE_NAME

UbuntuServer14.04设置静态IP和dns
vim /etc/network/interfaces
iface eth0 inet static
address 192.168.3.3
netmask 255.255.255.0
gateway 192.168.3.1
[dns-search example.com]
dns-nameservers 192.168.3.45 [192.168.8.10]

df -h 查看文件系统使用情况

取得路径的文件名称与目录名称

我们前面介绍的完整档名 (包含目录名称与文件名称) 当中提到，完整档名最长可以到达 4096 个字节。 那么你怎么知道那个是档名？那个是目录名？嘿嘿！就是利用斜线 (/) 来分辨啊！ 其实，取得档名或者是目录名称，一般的用途应该是在写程序的时候，用来判断之用的啦～ 所以，这部分的命令可以用在第三篇内的 shell scripts 里头喔！ 底下我们简单的以几个范例来谈一谈 basename 与 dirname 的用途！

[root@www ~]# basename /etc/sysconfig/network
network         <== 很简单！就取得最后的档名～
[root@www ~]# dirname /etc/sysconfig/network
/etc/sysconfig  <== 取得的变成目录名了！


直接检视文件内容： cat, tac, nl
可翻页检视： more, less
数据撷取： head, tail
非纯文字档： od
修改文件时间与建置新档： touch

文件默认权限：umask
文件隐藏属性： chattr, lsattr
文件特殊权限：SUID, SGID, SBIT, 权限配置
观察文件类型：file
